Youâ€™re 95% there â€” you already fetch the catalogs and built `_applyLabels(...)`. You just arenâ€™t using it in `build()`. Do this tiny change:

### Replace this in `build()`

```dart
final minutesMap = _aggregateMinutes(_dimension, range);
...
InsightsBarsCard(
  title: _dimension == Dimension.clients ? l.timeByClient : l.timeByService,
  minutesByKey: minutesMap,
),
```

### With this (apply labels before rendering)

```dart
final minutesById = _aggregateMinutes(_dimension, range);
final minutesLabeled = _applyLabels(minutesById);
...
InsightsBarsCard(
  title: _dimension == Dimension.clients ? l.timeByClient : l.timeByService,
  minutesByKey: minutesLabeled, // ðŸ‘ˆ human-readable names now
),
```

Thatâ€™s it â€” your bars will show **client/service names** instead of IDs.

#### (Optional niceties)

* If you want stable ordering (e.g., highest first), sort before passing:

  ```dart
  Map<String, int> _sortDesc(Map<String, int> m) {
    final entries = m.entries.toList()
      ..sort((a, b) => b.value.compareTo(a.value));
    return { for (final e in entries) e.key: e.value };
  }
  // then:
  final minutesLabeled = _sortDesc(_applyLabels(minutesById));
  ```
* If some events reference deleted clients/services, your fallback `?? e.key` will keep the ID label, which is fine.
