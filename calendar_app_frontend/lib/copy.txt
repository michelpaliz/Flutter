Got it ‚Äî you want a new **Group Dashboard** screen that you‚Äôll open instead of ‚ÄúGo to calendar‚Äù, and inside that dashboard the **FAB** should take you to the group‚Äôs calendar. Here‚Äôs a clean drop-in set of changes to wire everything up.

---

### 1) Add a new route constant

**`appRoutes.dart`**

```dart
class AppRoutes {
  // ...
  static const groupDashboard = '/group-dashboard'; // üëà NEW
  // ...
}
```

---

### 2) Register the new route

**`routes.dart`**

```dart
import 'package:calendar_app_frontend/c-frontend/b-calendar-section/screens/group-screen/dashboard/group_dashboard.dart'; // üëà NEW

final Map<String, WidgetBuilder> routes = {
  // ...
  AppRoutes.groupDashboard: (context) { // üëà NEW
    final group = ModalRoute.of(context)?.settings.arguments as Group?;
    if (group == null) return const SizedBox.shrink();
    return GroupDashboard(group: group);
  },
  // ...
};
```

---

### 3) Change the dialog button to open the dashboard (not the calendar)

**Where you build the profile dialog** (`buildProfileDialogContent`)

```dart
// Old:
Navigator.pushNamed(
  context,
  AppRoutes.groupCalendar,
  arguments: group,
);

// New:
Navigator.pushNamed(
  context,
  AppRoutes.groupDashboard, // üëà goes to dashboard now
  arguments: group,
);
```

---

### 4) Make the FAB on the dashboard go to the calendar

Tweak your **ContextualFab** so that when we‚Äôre on the dashboard route, the FAB jumps to the calendar for that group.

**`ContextualFab`**

```dart
@override
Widget build(BuildContext context) {
  // ...existing code...
  final name = settings?.name ?? '';
  final args = settings?.arguments;
  final groupArg = args is Group ? args : null;

  IconData iconData = Iconsax.add;
  VoidCallback? onPressed;

  // üëá NEW: On the group dashboard, FAB opens the group calendar
  if (name == AppRoutes.groupDashboard && groupArg != null) {
    iconData = Iconsax.calendar; // or Icons.calendar_month_rounded
    onPressed = () => Navigator.pushNamed(
      context,
      AppRoutes.groupCalendar,
      arguments: groupArg,
    );
  }
  // 1) (existing) If we already have a Group on other pages ‚Üí Add Event
  else if (groupArg != null) {
    iconData = Iconsax.calendar_add;
    onPressed = () =>
        Navigator.pushNamed(context, AppRoutes.addEvent, arguments: groupArg);
  }
  // 2) (existing) On Home ‚Üí Create Group
  else if (name == AppRoutes.homePage || name.isEmpty) {
    iconData = Iconsax.add_circle;
    onPressed = () => Navigator.pushNamed(context, AppRoutes.createGroupData);
  }
  // ...keep the rest unchanged...
```

> Note: The **dashboard check must come before** the generic `groupArg != null` branch so it overrides the default ‚ÄúAdd Event‚Äù behavior.

---

### 5) Create the new dashboard screen

A simple, theme-aware screen with group info, a ‚ÄúGo to calendar‚Äù button (for users who prefer tapping the button), and it uses your **ContextualFab** so the FAB also goes to the calendar.

**`c-frontend/b-calendar-section/screens/group-screen/dashboard/group_dashboard.dart`**

```dart
import 'package:calendar_app_frontend/a-models/group_model/group/group.dart';
import 'package:calendar_app_frontend/c-frontend/routes/appRoutes.dart';
import 'package:calendar_app_frontend/f-themes/utilities/utilities.dart';
import 'package:calendar_app_frontend/l10n/app_localizations.dart';
import 'package:flutter/material.dart';

// If ContextualFab lives elsewhere, adjust this import path:
import 'package:calendar_app_frontend/c-frontend/routes/contextual_fab.dart';

class GroupDashboard extends StatelessWidget {
  final Group group;
  const GroupDashboard({super.key, required this.group});

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final colorScheme = theme.colorScheme;
    final textTheme = theme.textTheme;
    final loc = AppLocalizations.of(context)!;

    return Scaffold(
      appBar: AppBar(
        title: Text(group.name, overflow: TextOverflow.ellipsis),
      ),
      body: ListView(
        padding: const EdgeInsets.all(16),
        children: [
          Row(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              CircleAvatar(
                radius: 28,
                backgroundImage: Utilities.buildProfileImage(group.photoUrl),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(group.name,
                        style: textTheme.titleLarge?.copyWith(
                          fontWeight: FontWeight.w700,
                        )),
                    const SizedBox(height: 4),
                    Text(
                      '${group.createdTime.year}-${group.createdTime.month.toString().padLeft(2, '0')}-${group.createdTime.day.toString().padLeft(2, '0')}',
                      style: textTheme.bodySmall?.copyWith(
                        color: colorScheme.onSurface.withOpacity(0.7),
                      ),
                    ),
                  ],
                ),
              ),
            ],
          ),
          const SizedBox(height: 16),

          // Quick actions
          Card(
            child: Padding(
              padding: const EdgeInsets.all(12),
              child: Column(
                children: [
                  // ‚ÄúGo to calendar‚Äù button inside the dashboard
                  SizedBox(
                    width: double.infinity,
                    child: FilledButton.icon(
                      icon: const Icon(Icons.calendar_month_rounded),
                      label: Text(loc.goToCalendar),
                      onPressed: () {
                        Navigator.pushNamed(
                          context,
                          AppRoutes.groupCalendar,
                          arguments: group,
                        );
                      },
                    ),
                  ),
                  const SizedBox(height: 8),
                  if (!group.hasCalendar)
                    Text(
                      'This group has no calendar linked yet.',
                      style: textTheme.bodySmall?.copyWith(
                        color: colorScheme.error,
                      ),
                    ),
                ],
              ),
            ),
          ),

          const SizedBox(height: 16),

          // Example sections you can expand later
          Card(
            child: ListTile(
              leading: const Icon(Icons.group_outlined),
              title: const Text('Members'),
              subtitle: Text('${group.userIds.length} total'),
              onTap: () {
                // TODO: navigate to your members list page (if any)
              },
            ),
          ),
          const SizedBox(height: 8),
          Card(
            child: ListTile(
              leading: const Icon(Icons.settings_outlined),
              title: const Text('Group settings'),
              onTap: () {
                Navigator.pushNamed(context, AppRoutes.groupSettings,
                    arguments: group);
              },
            ),
          ),
        ],
      ),

      // Use your shared FAB; ContextualFab now routes to calendar on this page.
      floatingActionButton: const ContextualFab(),
    );
  }
}
```

---

### That‚Äôs it

* The dialog now opens **GroupDashboard**.
* On the dashboard, the **FAB** and the **button** both jump to **Group Calendar**.
* Everything stays theme-aware and uses your existing patterns.

If you want, I can also add a small ‚ÄúRecently added events‚Äù section to the dashboard that reads from `group.defaultCalendar` when present.
